#!/usr/bin/env bash
#  A script to manage the ``manage_my_process`` process

#  When passing the argument start:
#	Starts manage_my_process
#	Creates a file containing its PID in /var/run/my_process.pid
#	Displays manage_my_process started
#
#  When passing the argument stop:
#	Stops manage_my_process
#	Deletes the file /var/run/my_process.pid
#	Displays manage_my_process stopped
#
#  When passing the argument restart
#	Stops manage_my_process
#	Deletes the file /var/run/my_process.pid
#	Starts manage_my_process
#	Creates a file containing its PID in /var/run/my_process.pid
#	Displays manage_my_process restarted
#
#  Displays Usage: manage_my_process {start|stop|restart} if any other argument
#+ or no argument is passed


my_process="manage_my_process"
my_ppid="/var/run/my_process.pid"
exit_msg="Usage: $my_process {start|stop|restart}"

#  Check for excess or deficit command line arguments
if [ "$#" -ne 1 ]
then
	echo "$exit_msg"
	exit $?
fi


#  Interpret commmands
if [ "${1}" == "start" ]
then
	./"$my_process" &	# start this process in the background
	echo "$!" > "$my_ppid"
	echo "$my_process started"
elif [ "${1}" == "stop" ]
then
	kill "$(cat $my_ppid)"
	rm "$my_ppid"
	echo "$my_process stopped"
elif [ "$1" == "restart" ]
then
	kill "$(cat $my_ppid)"
	rm "my_ppid"
	./"$my_process" &
	echo "$!" > "$my_ppid"
	echo "$my_process restarted"
else
	echo "$exit_msg"
fi
