#!/usr/bin/env bash
# Audit a web domain/sub-domain

ENOPARAM=1	# No parameter provided
SUCCESS=0	# Program executed successfully

if [ "$#" -eq 0 ]; then
	echo "Usage: $0 <domain name>"
	exit "$ENOPARAM"
fi

# Bash Function
ENOARG=23	# No argument passed to function
EMANYARG=26	# More than required number of arguments
# Arg format: sub-domain.domain.ext
audit()		# Audit a particular domain name
{
	if [ "$#" -gt  1 ]; then
		echo "Invalid number of arguments passed to the '$0' function"
		return "$EMANYARG"
	elif [ "$#" -eq 0 ]; then
		echo "No argument passed to the '$0' function"
		return "$ENOARG"
	fi 

	ans=$( dig "$1" | grep -A1 'ANSWER SECTION' | tail -1 )
	# echo "$ans"
	sub_domain_type=$( echo "$1" | cut --delimiter='.' --fields=1 )
	echo -n "The subdomain $sub_domain_type is a "
	msg=$( echo "$ans" | awk --field-separator ' ' '{print $4 " record and points to " $5}' )
	echo "$msg"
	return "$SUCCESS"
}


# Example of arguments:
# 1 arg: holberton.online
# 2 args: holberton.online web-02

if [ "$#" -eq 1 ]; then
	# Audit all of these subdomains

	root="$1"
	www="www.$root"
	lb_01="lb-01.$root"
	web_01="web-01.$root"
	web_02="web-02.$root"
	declare -a domains=( "$www" "$lb_01" "$web_01" "$web_02" )

	for each_domain in "${domains[@]}"; do
		audit "$each_domain"
	done
else
	# Audit only one subdomain

	root="$"
	sub_domain="$2.$1"
	audit "$sub_domain"
fi


exit "$SUCCESS"
